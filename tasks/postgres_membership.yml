---
- name: Maintenance roles in other roles
  become: true
  become_user: "{{ postgres_system_user }}"
  tags: postgres_objects,postgres_membership
  community.postgresql.postgresql_membership:
# Connect and common parameters
    ca_cert: "{{ item.0.ca_cert | default(omit) }}"
    connect_params: "{{ item.0.connect_params | default(omit) }}"
    db: "{{ item.0.db | default(omit) }}"
    login_host: "{{ item.0.login_host | default(omit) }}"
    login_password: "{{ item.0.login_password | default(omit) }}"
    login_unix_socket: "{{ item.0.login_unix_socket | default(omit) }}"
    login_user: "{{ item.0.login_user | default(omit) }}"
    port: "{{ item.0.port | default(omit) }}"
    session_role: "{{ item.0.session_role | default(omit) }}"
    ssl_cert: "{{ item.0.ssl_cert | default(omit) }}"
    ssl_key: "{{ item.0.ssl_key | default(omit) }}"
    ssl_mode: "{{ item.0.ssl_mode | default(omit) }}"
# Membership parameters
    fail_on_role: "{{ item.fail_on_role | default(omit) }}"
# Groups must be defined
    groups: "{{ item.1.list }}"
    state: "{{ item.1.state | default('present') }}"
    target_roles: "{{ item.0.name }}"
    trust_input: "{{ item.1.trust_input | default(omit) }}"
  loop: "{{ postgres_users | subelements('roles', skip_missing=True) }}"
